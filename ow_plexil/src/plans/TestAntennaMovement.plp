// The Notices and Disclaimers for Ocean Worlds Autonomy Testbed for Exploration
// Research and Simulation can be found in README.md in the root directory of
// this repository.

// Test a sequence of Pan/Tilt combinations.

#include "ow-interface.h"

LibraryAction TestPanTilt (In Real Pan, In Real Tilt,
                           InOut Integer Count, InOut Integer Wins);

TestAntennaMovement: UncheckedSequence
{
  Integer Count = 0;
  Integer Wins = 0;

  // Initialize antenna
  LibraryCall PanTiltMoveJoints (PanDegrees = 0, TiltDegrees = 0);

  // Pan tests
  LibraryCall TestPanTilt(Pan = 183.346, Tilt = 0, Count = Count, Wins = Wins);
  LibraryCall TestPanTilt(Pan = -183.346, Tilt = 0, Count = Count, Wins = Wins);
  LibraryCall TestPanTilt(Pan = 0, Tilt = 0, Count = Count, Wins = Wins);
  LibraryCall TestPanTilt(Pan = -45, Tilt = 0, Count = Count, Wins = Wins);
  LibraryCall TestPanTilt(Pan = 10, Tilt = 0, Count = Count, Wins = Wins);
  LibraryCall TestPanTilt(Pan = 0, Tilt = 0, Count = Count, Wins = Wins);

  // Tilt tests
  LibraryCall TestPanTilt (Pan = 0, Tilt = 10, Count = Count, Wins = Wins);
  LibraryCall TestPanTilt (Pan = 0, Tilt = 20, Count = Count, Wins = Wins);
  LibraryCall TestPanTilt (Pan = 0, Tilt = -10, Count = Count, Wins = Wins);
  LibraryCall TestPanTilt(Pan = 0, Tilt = 89.38, Count = Count, Wins = Wins);
  LibraryCall TestPanTilt(Pan = 0, Tilt = -89.38, Count = Count, Wins = Wins);
  LibraryCall TestPanTilt(Pan = 0, Tilt = 45, Count = Count, Wins = Wins);
  LibraryCall TestPanTilt(Pan = 0, Tilt = 0, Count = Count, Wins = Wins);

  if (Wins == Count ) {
    log_info ("TestAntennaMovement: SUCCEEDED, ", Count, "/", Count,
              " tests passed");
  }
  else {
    log_error ("TestAntennaMovement: FAILED, ", Wins, "/", Count,
               " tests passed");
  }
  endif
}
