// The Notices and Disclaimers for Ocean Worlds Autonomy Testbed for
// Exploration Research and Simulation can be found in README.md in
// the root directory of this repository.

// This plan tests the ActionGoalStatus lookup on every action. 

#include "ow-interface.h"

LibraryAction TestActions();

TestActionGoalState:
{
  log_info ("Beginning action goal state lookup test...");

  TheTest: Concurrence
  {
    LibraryCall TestActions();

    // Check for each action being active
    ArmUnstow: {
      End Lookup(ActionGoalStatus("ArmUnstow")) == ACTION_ACTIVE; }
    ArmMoveCartesian: {
      End Lookup(ActionGoalStatus("ArmMoveCartesian")) == ACTION_ACTIVE; }
    ArmMoveJoint: {
      End Lookup(ActionGoalStatus("ArmMoveJoint")) == ACTION_ACTIVE; }
    ArmMoveJoints: {
      End Lookup(ActionGoalStatus("ArmMoveJoints")) == ACTION_ACTIVE; }
    ArmMoveJointsGuarded: {
      End Lookup(ActionGoalStatus("ArmMoveJointsGuarded")) == ACTION_ACTIVE; }
    ArmFindSurface: {
      End Lookup(ActionGoalStatus("ArmFindSurface")) == ACTION_ACTIVE; }
    CameraSetExposure: {
      End Lookup(ActionGoalStatus("CameraSetExposure")) == ACTION_ACTIVE; }
    CameraCapture: {
      End Lookup(ActionGoalStatus("CameraCapture")) == ACTION_ACTIVE; }
    GuardedMove: {
      End Lookup(ActionGoalStatus("GuardedMove")) == ACTION_ACTIVE; }
    LightSetIntensity: {
      End Lookup(ActionGoalStatus("LightSetIntensity")) == ACTION_ACTIVE; }
    TaskGrind: {
      End Lookup(ActionGoalStatus("TaskGrind")) == ACTION_ACTIVE; }
    TaskScoopCircular: {
      End Lookup(ActionGoalStatus("TaskScoopCircular")) == ACTION_ACTIVE; }
    TaskScoopLinear: {
      End Lookup(ActionGoalStatus("TaskScoopLinear")) == ACTION_ACTIVE; }
    TaskDiscardSample: {
      End Lookup(ActionGoalStatus("TaskDiscardSample")) == ACTION_ACTIVE; }
    TaskDeliverSample: {
      End Lookup(ActionGoalStatus("TaskDeliverSample")) == ACTION_ACTIVE; }
    DockIngestSample: {
      End Lookup(ActionGoalStatus("DockIngestSample")) == ACTION_ACTIVE; }
    ArmStow: {
      End Lookup(ActionGoalStatus("ArmStow")) == ACTION_ACTIVE; }
    PanTiltMoveCartesian: {
      End Lookup(ActionGoalStatus("PanTiltMoveCartesian")) == ACTION_ACTIVE; }
    PanTiltMoveJoints: {
      End Lookup(ActionGoalStatus("PanTiltMoveJoints")) == ACTION_ACTIVE; }
    Pan: {
      End Lookup(ActionGoalStatus("Pan")) == ACTION_ACTIVE; }
    Tilt: {
      End Lookup(ActionGoalStatus("Tilt")) == ACTION_ACTIVE; }
  }

  log_info ("Finished action goal state lookup test.");
}
